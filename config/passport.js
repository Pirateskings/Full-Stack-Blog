const LocalStrategy = require("passport-local").Strategy;
const bcrypt = require("bcryptjs");
const User = require("../models/User");

module.exports = function (passport) {
  passport.use(
    new LocalStrategy(
      {
        usernameField: "email",
      },
      async (email, password, done) => {
        try {
          // find the user
          const user = await User.findOne({ email });
          if (!user) {
            return done(null, false, {
              message: "No user with this email",
            });
          }
          // compare the provided password with the one in the database
          // decrypt the password generated by gensalt and bcrypt
          const isMatch = await bcrypt.compare(password, user.password);

          if (!isMatch) {
            return done(null, false, {
              message: "Incorrect password",
            });
          }
          // Authenticated successful return the user
          return done(null, user);
        } catch (error) {
          return done(error);
        }
      }
    )
  );

  // serialize user
  passport.serializeUser((user, done) => {
    done(null, user.id);
  });

  // deserialize user
  passport.deserializeUser(async (id, done) => {
    try {
      const user = await User.findById(id);
      done(null, user);
    } catch (error) {
      done(error);
    }
  });
};
